<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.BoardMapper">

    <insert id="create">
        insert into tbl_board (id, title, content, writer, cnum, regdate, getcolor, boardip, boardipreal)
        values(#{id}, #{title}, #{content}, #{writer}, #{cnum}, NOW(), #{getcolor}, #{boardip}, #{boardipreal})
    </insert>
    <!--boardMapper.xml의 각 SQL 문의 id 속성 값은 BoardDAO 인터페이스와 동일하게 설정해주어서 혼란을 피하는 것이 좋음.-->

    <!-- boardMapper.xml 에 'replycnt'칼럼을 select 쿼리문에 추가 안해서
    어느 한 게시물(readPage)들어가면 그 게시물의 전체 댓글수가 안 보여졌음요. -->
    <select id="read" resultType="org.zerock.domain.BoardVO">
        select
        *
        from
        tbl_board
        where bno = #{bno}
    </select>

    <!-- 글 등록으로 인하여 포인트 증가시키기 위한 bno 가져오기 위한 다시 리드 후 boardVO에 겹침 -->
    <select id="readByIDnTitle" resultType="org.zerock.domain.BoardVO">
        select
        *
        from
        tbl_board
        where writer = #{writer} AND title = #{title}
    </select>

    <update id="update">
        update tbl_board set title = #{title}, content = #{content}, updatedate = NOW()
        where bno = #{bno}
    </update>

    <!-- SQL delete 에서 update 로 바꿈 -->
    <!-- <delete id="delete"> delete from tbl_board where bno = #{bno} </delete> -->
    <update id="delete">
        UPDATE tbl_board SET boardvisible = 'N'
        WHERE bno = #{bno}
    </update>

    <!-- 테스트용 무시하자! ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!--
    <select id="listAll" resultType="org.zerock.domain.BoardVO">
        <![CDATA[ select bno, title, content, writer, regdate, viewcnt from tbl_board where bno > 0
         order by bno desc, regdate desc ]]> </select>
    -->

    <!-- 테스트용 무시하자! ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!--
    <select id="listPage" resultType="BoardVO">
        <![CDATA[ select bno, title, content, writer, regdate, viewcnt, replycnt from tbl_board
         where bno > 0 order by bno desc, regdate desc limit #{page}, 10 ]]> </select>
    -->

    <!-- 테스트용 무시하자! ㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡㅡ -->
    <!--
    <select id="listCriteria" resultType="BoardVO">
        <![CDATA[
         select   bno, title, content, writer, regdate, viewcnt, replycnt from tbl_board
         where    bno > 0 order by bno desc, regdate desc limit #{pageStart}, #{perPageNum} ]]>
    </select>
    -->

    <!--<![CDATA[ select count(bno) from tbl_board where bno > 0 ]]> </select>-->
    <!-- 이거 안 씀. 밑의 listSearchCount 씀 -->
    <!--
    <select id="countPaging" resultType="int">
        <![CDATA[ select count(*) from tbl_board where bno > 0 ]]> </select>
    -->

    <sql id="search">
        <if test="searchType != null">
            <if test="searchType == 't'.toString()">
                and title like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'c'.toString()">
                and content like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'w'.toString()">
                and writer like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'tc'.toString()">
                and ( title like CONCAT('%', #{keyword}, '%') OR content like
                CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="searchType == 'cw'.toString()">
                and ( content like CONCAT('%', #{keyword}, '%') OR writer like
                CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="searchType == 'tcw'.toString()">
                and ( title like CONCAT('%', #{keyword}, '%')
                OR
                content like CONCAT('%', #{keyword}, '%')
                OR
                writer like CONCAT('%', #{keyword}, '%'))
            </if>
        </if>
    </sql>

    <sql id="cntSort">
        <if test="cntSortType != null">
            <if test="cntSortType == 'gc'.toString()">
                goodcnt DESC,
            </if>
            <if test="cntSortType == 'gbc'.toString()">
                gbcnt DESC,
            </if>
            <if test="cntSortType == 'vc'.toString()">
                viewcnt DESC,
            </if>
            <if test="cntSortType == 'bc'.toString()">
                badcnt DESC,
            </if>
            <if test="cntSortType == 'sc'.toString()">
                spamcnt DESC,
            </if>
        </if>
    </sql>

    <!-- 여기에 'replycnt' select 에 추가 안 해서 readPage 들어가면 그 게시물의 전체 댓글수가 안 보여졌음. -->
    <!-- resultType은 <typeAliases> 설정을 이용해서 축약해서 사용할 수 있음. -->
    <!-- 기본 게시판(cate) 보여주는 리스트 -->
    <select id="listSearch" resultType="BoardVO">
        <![CDATA[
              select * from tbl_board where bno > 0 AND cnum = #{cate} AND boardvisible = 'Y'
        ]]>

        <include refid="search"></include>

        <![CDATA[ order by ]]>

        <include refid="cntSort"></include>

        <![CDATA[
              bno desc
              limit #{pageStart}, #{perPageNum}
        ]]>
    </select>
    <!-- 기본 게시판(cate) 클릭하고 나서 보여주는 리스트 / cnum 구현 완료 -->
    <!-- pageStart, perPageNum이라는 인라인 파라미터가 존재. 파라미터로 전달되는 객체는 getPageStart(), getPerPageNum()이라는 메소드를 가지면 됨. -->

    <!--select count(bno)-->
    <!-- 게시판 밑 페이징 (1~10버튼) 구현하기 위한 총 몇개 카운트 -->
    <select id="listSearchCount" resultType="int">
        <![CDATA[
          select count(*) from tbl_board where bno > 0 AND cnum = #{cate} AND boardvisible = 'Y'
        ]]>
        <include refid="search"></include>
    </select>

    <!-- 전체 검색 기능 구현 listAny -->
    <select id="listSearchAny" resultType="BoardVO">
        SELECT * FROM tbl_board WHERE bno > 0 AND boardvisible = 'Y'
        AND (title LIKE concat('%', #{keyword}, '%')
        OR content LIKE concat('%', #{keyword}, '%')
        OR writer LIKE concat('%', #{keyword}, '%'))
        ORDER BY

        <include refid="cntSort"></include>

        <![CDATA[
            bno DESC

            limit #{pageStart}, #{perPageNum}
        ]]>
    </select>

    <!-- 전체 검색 기능 구현시 총 몇개 카운트 -->
    <select id="listSearchAnyCount" resultType="int">
        <![CDATA[
        SELECT COUNT(bno) FROM tbl_board WHERE bno > 0 AND boardvisible = 'Y'
        ]]>
        AND (
        writer LIKE concat('%', #{keyword}, '%')
        OR title LIKE concat('%', #{keyword}, '%')
        OR content LIKE concat('%', #{keyword}, '%')
        )
    </select>

    <!-- 게시판 댓글 작성 수 증가 -->
    <update id="updateReplyCnt">
        UPDATE tbl_board SET replycnt = replycnt + #{amount} WHERE bno = #{bno}
    </update>

    <!-- 게시판 글 클릭시 조회수 증가 -->
    <update id="updateViewCnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 WHERE bno = #{bno}
    </update>

    <!-- 게시판 글(읽기 - readPage)의 카테고리 이름 출력 -->
    <select id="callCateName" resultType="String">
        SELECT cname FROM tbl_cate LEFT JOIN tbl_board ON tbl_cate.cnum = tbl_board.cnum
        WHERE tbl_board.bno = #{bno}
    </select>
    <!--
    <select id="callCateName" resultType="String">
        SELECT cname FROM tbl_cate WHERE cnum =
                             (SELECT cnum FROM tbl_board WHERE bno = #{bno})
    </select>
    -->

    <!-- 게시판 리스트(목록 - List)의 카테고리 이름 출력 -->
    <select id="callCateNameInList" resultType="String">
        SELECT cname FROM tbl_cate WHERE cnum = #{cateNum}
    </select>

    <insert id="addAttach">
        -- addAttach //
        INSERT INTO tbl_attach(fullname, bno) VALUES (#{fullName}, #{boardBno})
    </insert>

    <insert id="addAttachOrigin">
        -- addAttachOrigin //
        INSERT INTO tbl_attach_origin(fullname, bno) VALUES (#{fullName}, #{boardBno})
    </insert>

    <select id="getAttach" resultType="string">
        SELECT fullname FROM tbl_attach WHERE bno = #{bno} ORDER BY regdate
    </select>

    <delete id="deleteAttach">
        DELETE FROM tbl_attach WHERE bno = #{bno}
    </delete>

    <insert id="replaceAttach">
        INSERT INTO tbl_attach(fullname, bno) VALUES (#{fullName}, #{bno})
    </insert>

    <select id="totalUserPostNumGET" resultType="int">
        SELECT count(*) FROM tbl_board WHERE boardvisible = 'Y' AND id = #{uid}
    </select>

    <select id="totalColorPostNumGet" resultType="int">
        SELECT count(*) FROM tbl_board WHERE boardvisible = 'Y' AND getcolor = #{getColor}
    </select>

    <!-- 게시판 - 실시간 인기순으로 정렬 -->
    <select id="livePopular" resultType="BoardVO">
        SELECT * FROM tbl_board WHERE cnum = #{cate} AND DATE(regdate) = #{sdfToday}
        ORDER BY gbcnt DESC, goodcnt DESC, regdate DESC

        <include refid="cntSort"></include>

        <![CDATA[
              limit #{pageStart}, #{perPageNum}
        ]]>
    </select>

    <select id="livePopularCount" resultType="int">
        SELECT count(*) FROM tbl_board WHERE cnum = #{cate} AND DATE(regdate) = #{sdfToday}
        ORDER BY gbcnt DESC, goodcnt DESC, regdate DESC
    </select>

    <!-- 게시판 - 같은 정치성향 정렬 -->
    <select id="samePopular" resultType="BoardVO">
-- samePopular 게시판 - 같은 정치성향 정렬
        SELECT * FROM tbl_board WHERE getcolor = #{getcolor} AND cnum = #{cnum}
        AND id = ANY (SELECT uid FROM tbl_user WHERE uday = #{uday} AND ugender = #{ugender})
              limit #{pageStart}, #{perPageNum}
    </select>

    <select id="samePopularCount" resultType="int">
-- samePopularCount 게시판 - 같은 정치성향 정렬
       SELECT count(*) FROM tbl_board WHERE getcolor = #{getcolor} AND cnum = #{cnum}
       AND id = ANY (SELECT uid FROM tbl_user WHERE uday = #{uday} AND ugender = #{ugender})
    </select>

    <select id="getAttachNameGET" resultType="string">
        SELECT fullName FROM tbl_attach WHERE bno = #{bno} LIMIT 1
    </select>

</mapper>


