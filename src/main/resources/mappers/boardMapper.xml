<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="org.zerock.mapper.BoardMapper">

    <insert id="create">
        insert into tbl_board (title, content, writer, cnum, regdate)
        values(#{title}, #{content}, #{writer}, #{cnum}, NOW())
    </insert>
    <!--boardMapper.xml의 각 SQL 문의 id 속성 값은 BoardDAO 인터페이스와 동일하게 설정해주어서 혼란을 피하는 것이 좋음.-->

    <!-- boardMapper.xml 에 'replycnt'칼럼을 select 쿼리문에 추가 안해서
어느 한 게시물(readPage)들어가면 그 게시물의 전체 댓글수가 안 보여졌음요. -->
    <select id="read" resultType="org.zerock.domain.BoardVO">
        select
        *
        from
        tbl_board
        where bno = #{bno}
    </select>

    <update id="update">
        update tbl_board set title =#{title}, content =#{content}, updatedate = NOW()
        where bno = #{bno}
    </update>

    <delete id="delete">
        delete from tbl_board where bno = #{bno}
    </delete>

    <!-- 테스트용 무시하자! -->
    <select id="listAll" resultType="org.zerock.domain.BoardVO">
        <![CDATA[


         select
           bno, title, content, writer, regdate, viewcnt
         from
           tbl_board
         where bno > 0
         order by bno desc, regdate desc



        ]]>
    </select>

    <!-- 여기에 'replycnt' select 에 추가 안 해서 readPage 들어가면 그 게시물의 전체 댓글수가 안 보여졌음. -->
    <select id="listPage" resultType="BoardVO">
        <![CDATA[
         select
           bno, title, content, writer, regdate, viewcnt, replycnt
         from
           tbl_board
         where bno > 0
         order by bno desc, regdate desc
         limit #{page}, 10
        ]]>
    </select>
    <!-- resultType은 <typeAliases> 설정을 이용해서 축약해서 사용할 수 있음. -->

    <!--<select id="listCriteria" resultType="BoardVO">-->
    <!--<![CDATA[-->
    <!---->
    <!--select-->
    <!--bno, title, content, writer, regdate, viewcnt-->
    <!--from-->
    <!--tbl_board-->
    <!--where bno > 0-->
    <!--order by bno desc, regdate desc-->
    <!--limit #{pageStart}, #{perPageNum}-->

    <!--]]>-->
    <!--</select>-->

    <select id="listCriteria" resultType="BoardVO">
        <![CDATA[
         select
           bno, title, content, writer, regdate, viewcnt, replycnt
         from
           tbl_board
         where bno > 0
         order by bno desc, regdate desc
         limit #{pageStart}, #{perPageNum}
        ]]>
    </select>
    <!-- pageStart, perPageNum이라는 인라인 파라미터가 존재. 파라미터로 전달되는 객체는 getPageStart(), getPerPageNum()이라는 메소드를 가지면 됨. -->

    <select id="countPaging" resultType="int">
        <![CDATA[
         select
           count(bno)
         from
           tbl_board
         where
           bno > 0
        ]]>
    </select>


    <sql id="search">
        <if test="searchType != null">
            <if test="searchType == 't'.toString()">
                and title like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'c'.toString()">
                and content like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'w'.toString()">
                and writer like CONCAT('%', #{keyword}, '%')
            </if>
            <if test="searchType == 'tc'.toString()">
                and ( title like CONCAT('%', #{keyword}, '%') OR content like
                CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="searchType == 'cw'.toString()">
                and ( content like CONCAT('%', #{keyword}, '%') OR writer like
                CONCAT('%', #{keyword}, '%'))
            </if>
            <if test="searchType == 'tcw'.toString()">
                and ( title like CONCAT('%', #{keyword}, '%')
                OR
                content like CONCAT('%', #{keyword}, '%')
                OR
                writer like CONCAT('%', #{keyword}, '%'))
            </if>
        </if>
    </sql>

    <!-- 기본 게시판(건의사항 클릭하고 나서 보여주는 리스트 -->
    <select id="listSearch" resultType="BoardVO">
        <![CDATA[
              select *
              from tbl_board
              where bno > 0 AND cnum = #{cate}
        ]]>

        <include refid="search"></include>

        <![CDATA[
              order by bno desc
              limit #{pageStart}, #{perPageNum}
        ]]>
    </select>
    <!-- 기본 게시판(건의사항 클릭하고 나서 보여주는 리스트 / cnum 구현 완료 -->

    <!-- 게시판 밑 페이징 (1~10버튼) -->
    <select id="listSearchCount" resultType="int">
        <![CDATA[
          select count(bno)
          from tbl_board
          where bno > 0 AND cnum = #{cate}
        ]]>
        <include refid="search"></include>
    </select>

    <!-- 전체 검색 기능 구현 -->
    <select id="listSearchAny" resultType="BoardVO">
        SELECT * FROM tbl_board
        WHERE bno > 0
        AND (title LIKE concat('%', #{keyword}, '%')
        OR content LIKE concat('%', #{keyword}, '%')
        OR writer LIKE concat('%', #{keyword}, '%'))
        ORDER BY regdate DESC
        <![CDATA[
              limit #{pageStart}, #{perPageNum}
        ]]>;
    </select>

    <!-- 전체 검색 기능 구현시 총 몇개 카운트 -->
    <select id="listSearchAnyCount" resultType="int">
        <![CDATA[
        SELECT COUNT(bno)
        FROM tbl_board
        WHERE bno > 0
        ]]>
        AND (
        writer LIKE concat('%', #{keyword}, '%')
        OR title LIKE concat('%', #{keyword}, '%')
        OR content LIKE concat('%', #{keyword}, '%')
        )
    </select>

    <!-- 게시판 댓글 작성 수 증가 -->
    <update id="updateReplyCnt">
        UPDATE tbl_board SET replycnt = replycnt + #{amount} WHERE bno = #{bno}
    </update>

    <!-- 게시판 글 클릭시 조회수 증가 -->
    <update id="updateViewCnt">
        UPDATE tbl_board SET viewcnt = viewcnt + 1 WHERE bno = #{bno}
    </update>

    <!-- 게시판 글(읽기 - readPage)의 카테고리 이름 출력 -->
    <select id="callCateName" resultType="String">
        SELECT cname FROM tbl_cate
        LEFT JOIN tbl_board
        ON tbl_cate.cnum = tbl_board.cnum
        WHERE tbl_board.bno = #{bno};
    </select>
    <!--
    <select id="callCateName" resultType="String">
        SELECT cname FROM tbl_cate WHERE cnum =
                             (SELECT cnum FROM tbl_board WHERE bno = #{bno});
    </select>

    -->

    <!-- 게시판 리스트(목록 - List)의 카테고리 이름 출력 -->
    <select id="callCateNameInList" resultType="String">
        SELECT cname FROM tbl_cate WHERE cnum = #{cateNum};
    </select>


    <insert id="addAttach">
        INSERT INTO tbl_attach(fullname, bno) VALUES (#{fullName}, LAST_INSERT_ID())
    </insert>


    <select id="getAttach" resultType="string">
        SELECT fullname FROM tbl_attach WHERE bno = #{bno} ORDER BY regdate
    </select>


    <delete id="deleteAttach">
        DELETE FROM tbl_attach WHERE bno = #{bno}
    </delete>

    <insert id="replaceAttach">
        INSERT INTO tbl_attach(fullname, bno) VALUES (#{fullName}, #{bno})
    </insert>

</mapper>


